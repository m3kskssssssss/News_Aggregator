#news_aggregator/cli_commands.py

import click
from flask.cli import with_appcontext
from models import db, User, NewsSource, Article
from news_fetcher import fetch_all_sources, fetch_news_from_sources
from datetime import datetime, timedelta


@click.command()
@with_appcontext
def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db.create_all()
    click.echo('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.')


@click.command()
@with_appcontext
def clear_db():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    if click.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö?'):
        db.drop_all()
        db.create_all()
        click.echo('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞.')


@click.command()
@with_appcontext
def clear_articles():
    """–û—á–∏—Å—Ç–∫–∞ —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π"""
    if click.confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ç—å–∏?'):
        Article.query.delete()
        db.session.commit()
        click.echo('–í—Å–µ —Å—Ç–∞—Ç—å–∏ —É–¥–∞–ª–µ–Ω—ã.')


@click.command()
@click.option('--days', default=7, help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö —Å—Ç–∞—Ç–µ–π')
@with_appcontext
def clean_old_articles(days):
    """–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Å—Ç–∞—Ç–µ–π"""
    cutoff_date = datetime.utcnow() - timedelta(days=days)
    old_articles = Article.query.filter(Article.published_at < cutoff_date)
    count = old_articles.count()

    if count > 0 and click.confirm(f'–£–¥–∞–ª–∏—Ç—å {count} —Å—Ç–∞—Ç–µ–π —Å—Ç–∞—Ä—à–µ {days} –¥–Ω–µ–π?'):
        old_articles.delete()
        db.session.commit()
        click.echo(f'–£–¥–∞–ª–µ–Ω–æ {count} —Å—Ç–∞—Ä—ã—Ö —Å—Ç–∞—Ç–µ–π.')
    else:
        click.echo('–°—Ç–∞—Ä—ã—Ö —Å—Ç–∞—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')


@click.command()
@with_appcontext
def fetch_sources():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    count = fetch_all_sources()
    click.echo(f'–ó–∞–≥—Ä—É–∂–µ–Ω–æ {count} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π.')


@click.command()
@click.option('--days', default=1, help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏')
@with_appcontext
def fetch_news(days):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    count = fetch_news_from_sources(days_back=days)
    click.echo(f'–ó–∞–≥—Ä—É–∂–µ–Ω–æ {count} –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π.')


@click.command()
@click.argument('username')
@click.argument('email')
@click.argument('password')
@with_appcontext
def create_user(username, email, password):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if User.query.filter_by(username=username).first():
        click.echo(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
        return

    if User.query.filter_by(email=email).first():
        click.echo(f'Email {email} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.')
        return

    user = User(username=username, email=email)
    user.set_password(password)
    db.session.add(user)
    db.session.commit()
    click.echo(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —Å–æ–∑–¥–∞–Ω.')


@click.command()
@with_appcontext
def list_users():
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    users = User.query.all()
    for user in users:
        click.echo(f'ID: {user.id}, –õ–æ–≥–∏–Ω: {user.username}, Email: {user.email}')


@click.command()
@with_appcontext
def list_sources():
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    sources = NewsSource.query.all()
    for source in sources:
        status = "–ê–∫—Ç–∏–≤–µ–Ω" if source.is_active else "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
        click.echo(f'ID: {source.id}, –ù–∞–∑–≤–∞–Ω–∏–µ: {source.name}, –°—Ç–∞—Ç—É—Å: {status}')


@click.command()
@with_appcontext
def stats():
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    users_count = User.query.count()
    sources_count = NewsSource.query.count()
    articles_count = Article.query.count()

    click.echo(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}')
    click.echo(f'–ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {sources_count}')
    click.echo(f'–°—Ç–∞—Ç–µ–π: {articles_count}')


@click.command()
@click.option('--hours', default=2, help='–ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —á–∞—Å–∞—Ö')
@with_appcontext
def auto_update_news(hours):
    """–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π"""
    import time
    import threading

    def update_loop():
        while True:
            try:
                click.echo(f'üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π...')
                count = fetch_news_from_sources(days_back=1)
                click.echo(f'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {count} –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π')
            except Exception as e:
                click.echo(f'‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}')

            time.sleep(hours * 3600)  # –ü–µ—Ä–µ–≤–æ–¥–∏–º —á–∞—Å—ã –≤ —Å–µ–∫—É–Ω–¥—ã

    click.echo(f'üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ {hours} —á.')
    thread = threading.Thread(target=update_loop, daemon=True)
    thread.start()

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        click.echo('\n‚èπÔ∏è  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')


@click.command()
@with_appcontext
def clear_users():
    """–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∞"""
    users = User.query.filter(User.username != 'admin').all()
    count = len(users)

    if count > 0 and click.confirm(f'–£–¥–∞–ª–∏—Ç—å {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∞)?'):
        for user in users:
            user.selected_sources.clear()
        db.session.commit()

        User.query.filter(User.username != 'admin').delete()
        db.session.commit()
        click.echo(f'–£–¥–∞–ª–µ–Ω–æ {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.')
    else:
        click.echo('–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.')


def register_commands(app):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"""
    app.cli.add_command(init_db)
    app.cli.add_command(clear_db)
    app.cli.add_command(clear_articles)
    app.cli.add_command(clean_old_articles)
    app.cli.add_command(fetch_sources)
    app.cli.add_command(fetch_news)
    app.cli.add_command(create_user)
    app.cli.add_command(list_users)
    app.cli.add_command(list_sources)
    app.cli.add_command(stats)
    app.cli.add_command(clear_users)
    app.cli.add_command(auto_update_news)